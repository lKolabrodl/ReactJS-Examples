{"version":3,"sources":["components/spinner/Spinnner.jsx","components/photoitem/Photoitem.jsx","components/photoList/PhotoList.jsx","services/api.js","components/modalWindow/Form/Form.jsx","components/modalWindow/ModalWindow.jsx","utils/utils.js","components/app/App.jsx","index.js"],"names":["Spinner","className","Photoitem","photo","handlePhoto","useState","imageStatus","setImageStatus","onClick","id","onLoad","src","url","alt","PhotoList","photos","map","key","getPhotos","a","axios","get","response","data","getPhotosComments","PhotoId","sendPhotosComment","name","comment","post","Form","setName","setComment","console","log","onSubmit","e","preventDefault","alert","api","value","onChange","target","placeholder","type","ModalWindow","onClose","modalId","setPhoto","seImageStatus","useEffect","images","comments","length","item","i","text","time","d","Date","twoDate","digit","slice","getDate","getMonth","getFullYear","join","dateFormat","date","xmlns","viewBox","App","setPhotos","setModalId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.496ec337.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Spinner.css\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"lds-css ng-scope\">\r\n      <div className=\"lds-eclipse\">\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useState } from \"react\";\r\nimport Spinner from \"../spinner/Spinnner\";\r\nconst Photoitem = ({ photo, handlePhoto }) => {\r\n  const [imageStatus, setImageStatus] = useState(false);\r\n\r\n  const handleImageLoaded = () => {\r\n    setImageStatus(!imageStatus);\r\n  };\r\n\r\n  return (\r\n    <li className=\"Photoitem\" onClick={() => handlePhoto(photo.id)}>\r\n      {imageStatus ? null : <Spinner />}\r\n      <img onLoad={handleImageLoaded} src={photo.url} alt={photo.id} />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Photoitem;\r\n","import React from \"react\";\r\nimport Photoitem from \"../photoitem/Photoitem\";\r\n\r\nconst PhotoList = ({ photos, handlePhoto }) => {\r\n  return (\r\n    <div className=\"Photo__list\">\r\n      <ul>\r\n        {photos.map((photo) => (\r\n          <Photoitem handlePhoto={handlePhoto} key={photo.id} photo={photo} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PhotoList;\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n  getPhotos: async () => {\r\n    const response = await axios.get(\r\n      \"https://boiling-refuge-66454.herokuapp.com/images\"\r\n    );\r\n    return response.data;\r\n  },\r\n\r\n  getPhotosComments: async (PhotoId) => {\r\n    const response = await axios.get(\r\n      `https://boiling-refuge-66454.herokuapp.com/images/${PhotoId}`\r\n    );\r\n    return response.data;\r\n  },\r\n\r\n  sendPhotosComment: async (PhotoId, name, comment) => {\r\n    const response = await axios.post(\r\n      `https://boiling-refuge-66454.herokuapp.com/images/${PhotoId}/comments`,\r\n      { name, comment }\r\n    );\r\n\r\n    return response;\r\n  },\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"./form.scss\";\r\nimport api from \"../../../services/api\";\r\n\r\nconst Form = ({ id }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  console.log(id);\r\n\r\n  const onSubmitComments = (e) => {\r\n    e.preventDefault();\r\n    if (name === \"\" || comment === \"\") {\r\n      return;\r\n    }\r\n\r\n    alert(\r\n      `Данные на оправку id картинки: ${id}, имя:${name}, комментарий: ${comment}. Форма валидации не имеет`\r\n    );\r\n    api.sendPhotosComment(name, comment, id);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmitComments}>\r\n      <input\r\n        value={name}\r\n        onChange={(e) => {\r\n          setName(e.target.value);\r\n        }}\r\n        placeholder=\"Ваше имя\"\r\n      />\r\n      <input\r\n        value={comment}\r\n        onChange={(e) => {\r\n          setComment(e.target.value);\r\n        }}\r\n        placeholder=\"Ваш комментарий\"\r\n      />\r\n      <button type=\"submit\">Отправить</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport api from \"../../services/api\";\r\nimport dateFormat from \"../../utils/utils\";\r\n\r\nimport \"./modalWindow.scss\";\r\n\r\nimport Spinner from \"../spinner/Spinnner\";\r\nimport Form from \"./Form/Form\";\r\n\r\nconst ModalWindow = ({ onClose, modalId }) => {\r\n  const [photo, setPhoto] = useState(null);\r\n  const [imageStatus, seImageStatus] = useState(false);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const images = await api.getPhotosComments(modalId);\r\n      setPhoto(images);\r\n    })();\r\n  }, [modalId]);\r\n\r\n  const handleImageLoaded = () => {\r\n    seImageStatus(!imageStatus);\r\n  };\r\n\r\n  console.log(photo);\r\n\r\n  return (\r\n    <div className=\"modal-window\">\r\n      <div className=\"modal-content\">\r\n        <div className=\"modal-image\">\r\n          {imageStatus ? null : <Spinner />}\r\n          {photo && <img onLoad={handleImageLoaded} src={photo.url} alt=\"\" />}\r\n        </div>\r\n        {photo && <Form id={photo.id} />}\r\n\r\n        <div className=\"modal-comments\">\r\n          {photo && photo.comments.length !== 0\r\n            ? photo.comments.map((item, i) => (\r\n                <div key={i}>\r\n                  <p>{item.text}</p> <small>{dateFormat(item.date)}</small>\r\n                </div>\r\n              ))\r\n            : \"Комментариев нет\"}\r\n        </div>\r\n        <div\r\n          onClick={() => {\r\n            onClose();\r\n          }}\r\n          className=\"close-button\"\r\n        >\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\">\r\n            <path d=\"M25 42c-9.4 0-17-7.6-17-17S15.6 8 25 8s17 7.6 17 17-7.6 17-17 17zm0-32c-8.3 0-15 6.7-15 15s6.7 15 15 15 15-6.7 15-15-6.7-15-15-15z\" />\r\n            <path d=\"M32.283 16.302l1.414 1.415-15.98 15.98-1.414-1.414z\" />\r\n            <path d=\"M17.717 16.302l15.98 15.98-1.414 1.415-15.98-15.98z\" />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalWindow;\r\n","export default function dateFormat(time) {\r\n  const d = new Date(time);\r\n  const twoDate = (digit) => (\"0\" + digit).slice(-2);\r\n  return [\r\n    twoDate(d.getDate()),\r\n    twoDate(d.getMonth() + 1),\r\n    d.getFullYear(),\r\n  ].join(\".\");\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PhotoList from \"../photoList/PhotoList\";\r\nimport api from \"../../services/api\";\r\nimport ModalWindow from \"../modalWindow/ModalWindow\";\r\n\r\nconst App = () => {\r\n  const [photos, setPhotos] = useState([]);\r\n  const [modalId, setModalId] = useState(null);\r\n\r\n  //вся загрузка\r\n  useEffect(() => {\r\n    if (photos.length > 0) {\r\n      return;\r\n    }\r\n    (async () => {\r\n      const images = await api.getPhotos();\r\n      setPhotos(images);\r\n    })();\r\n  }, [photos]);\r\n\r\n  //получаем id\r\n  function handlePhoto(id) {\r\n    setModalId(id);\r\n  }\r\n\r\n  return (\r\n    <div className=\"photo__search\">\r\n      <h1>Фотоальбом</h1>\r\n      <PhotoList handlePhoto={handlePhoto} photos={photos} />\r\n\r\n      {modalId && (\r\n        <ModalWindow\r\n          onClose={() => {\r\n            setModalId(null);\r\n          }}\r\n          modalId={modalId}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/app/App.jsx\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}