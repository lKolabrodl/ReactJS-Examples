{"version":3,"sources":["components/Snake.jsx","components/Food.jsx","App.jsx","index.js"],"names":["props","snakeDots","map","dot","i","style","left","top","className","key","getRandomCoord","y","Math","floor","random","initialState","direction","speed","food","App","state","onKeyDown","e","console","log","keyCode","setState","moveSnake","dots","head","length","push","shift","setInterval","this","document","onkeydown","checkBoprders","checkCollapsed","checkFood","gameOver","snake","pop","forEach","enlargeSnake","speedIn","newSnake","unshift","alert","Snake","Food","Component","ReactDOM","render","getElementById"],"mappings":"0MAEe,G,MAAA,SAAAA,GACb,OACE,oCACGA,EAAMC,UAAUC,KAAI,SAACC,EAAKC,GACzB,IAAMC,EAAQ,CACZC,KAAMH,EAAI,GAAK,IACfI,IAAKJ,EAAI,GAAK,KAEhB,OAAO,yBAAKK,UAAU,YAAYC,IAAKL,EAAGC,MAAOA,UCR1C,WAAAL,GACb,IAAMK,EAAQ,CACZC,KAAMN,EAAMG,IAAI,GAAK,IACrBI,IAAKP,EAAMG,IAAI,GAAK,KAGtB,OAAO,yBAAKK,UAAU,aAAaH,MAAOA,KCHtCK,EAAiB,WACrB,IAEIC,EAA8D,EAA1DC,KAAKC,OAAO,GAAAD,KAAKE,SAFf,GAEmD,GAE7D,MAAO,CAD2D,EAA1DF,KAAKC,OAAO,GAAAD,KAAKE,SAHf,GAGmD,GAClDH,IAGPI,EAAe,CACnBd,UAAW,CACT,CAAC,EAAG,GACJ,CAAC,EAAG,IAENe,UAAW,QACXC,MAAO,IACPC,KAAMR,KAoHOS,E,4MAhHbC,MAAQL,E,EAYRM,UAAY,SAAAC,GAEV,OADAC,QAAQC,IAAIF,EAAEG,SACNH,EAAEG,SACR,KAAK,GACH,OAAO,EAAKC,SAAS,CAAEV,UAAW,OACpC,KAAK,GACH,OAAO,EAAKU,SAAS,CAAEV,UAAW,SACpC,KAAK,GACH,OAAO,EAAKU,SAAS,CAAEV,UAAW,SACpC,KAAK,GACH,OAAO,EAAKU,SAAS,CAAEV,UAAW,Y,EAMxCW,UAAY,WACV,IAAIC,EAAI,YAAO,EAAKR,MAAMnB,WACtB4B,EAAOD,EAAKA,EAAKE,OAAS,GAE9B,OAAQ,EAAKV,MAAMJ,WACjB,IAAK,OACHa,EAAO,CAACA,EAAK,GAAK,EAAGA,EAAK,IAC1B,MACF,IAAK,KACHA,EAAO,CAACA,EAAK,GAAK,EAAGA,EAAK,IAC1B,MACF,IAAK,QACHA,EAAO,CAACA,EAAK,GAAIA,EAAK,GAAK,GAC3B,MACF,IAAK,OACHA,EAAO,CAACA,EAAK,GAAIA,EAAK,GAAK,GAK/BD,EAAKG,KAAKF,GACVD,EAAKI,QACL,EAAKN,SAAS,CAAEzB,UAAW2B,K,kEA/C3BK,YAAYC,KAAKP,UAAWO,KAAKd,MAAMH,OACvCkB,SAASC,UAAYF,KAAKb,Y,2CAG1Ba,KAAKG,gBACLH,KAAKI,iBACLJ,KAAKK,c,sCA6CL,IAAIV,EAAOK,KAAKd,MAAMnB,UAAUiC,KAAKd,MAAMnB,UAAU6B,OAAS,IAC1DD,EAAK,IAAM,KAAOA,EAAK,IAAM,KAAOA,EAAK,GAAK,GAAKA,EAAK,GAAK,IAC/DK,KAAKM,a,uCAIS,IAAD,OACXC,EAAK,YAAOP,KAAKd,MAAMnB,WACvB4B,EAAOY,EAAMA,EAAMX,OAAS,GAEhCW,EAAMC,MACND,EAAME,SAAQ,SAAAxC,GACR0B,EAAK,KAAO1B,EAAI,IAAM0B,EAAK,KAAO1B,EAAI,IACxC,EAAKqC,gB,kCAMT,IAAIX,EAAOK,KAAKd,MAAMnB,UAAUiC,KAAKd,MAAMnB,UAAU6B,OAAS,GAC1DZ,EAAOgB,KAAKd,MAAMF,KAClBW,EAAK,KAAOX,EAAK,IAAMW,EAAK,KAAOX,EAAK,KAC1CgB,KAAKR,SAAS,CACZR,KAAMR,MAERwB,KAAKU,eACLV,KAAKW,UACLtB,QAAQC,IAAI,qC,gCAKVU,KAAKd,MAAMH,MAAQ,IACrBiB,KAAKR,SAAS,CAAET,MAAOiB,KAAKd,MAAMH,MAAQ,O,qCAK5C,IAAI6B,EAAQ,YAAOZ,KAAKd,MAAMnB,WAC9B6C,EAASC,QAAQ,IACjBb,KAAKR,SAAS,CAAEzB,UAAW6C,M,iCAI3BE,MAAM,kQACNd,KAAKR,SAASX,K,+BAId,OACE,yBAAKP,UAAU,aACb,kBAACyC,EAAD,CAAOhD,UAAWiC,KAAKd,MAAMnB,YAC7B,kBAACiD,EAAD,CAAM/C,IAAK+B,KAAKd,MAAMF,Y,GA3GZiC,aCnBlBC,IAASC,OAAO,kBAAC,EAAD,MAASlB,SAASmB,eAAe,U","file":"static/js/main.a4d945e5.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default props => {\n  return (\n    <>\n      {props.snakeDots.map((dot, i) => {\n        const style = {\n          left: dot[1] + \"%\",\n          top: dot[0] + \"%\"\n        };\n        return <div className=\"snake-dot\" key={i} style={style}></div>;\n      })}\n    </>\n  );\n};\n","import React from \"react\";\n\nexport default props => {\n  const style = {\n    left: props.dot[0] + \"%\",\n    top: props.dot[1] + \"%\"\n  };\n\n  return <div className=\"snake-food\" style={style}></div>;\n};\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Snake from \"./components/Snake\";\nimport Food from \"./components/Food\";\n\nconst getRandomCoord = () => {\n  let min = 1;\n  let max = 98;\n  let y = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n  let x = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n  return [x, y];\n};\n\nconst initialState = {\n  snakeDots: [\n    [0, 0],\n    [0, 2]\n  ],\n  direction: \"RIGHT\",\n  speed: 200,\n  food: getRandomCoord()\n};\n\nclass App extends Component {\n  state = initialState;\n\n  componentDidMount() {\n    setInterval(this.moveSnake, this.state.speed);\n    document.onkeydown = this.onKeyDown;\n  }\n  componentDidUpdate() {\n    this.checkBoprders();\n    this.checkCollapsed();\n    this.checkFood();\n  }\n\n  onKeyDown = e => {\n    console.log(e.keyCode);\n    switch (e.keyCode) {\n      case 38:\n        return this.setState({ direction: \"UP\" });\n      case 40:\n        return this.setState({ direction: \"DOWN\" });\n      case 37:\n        return this.setState({ direction: \"LEFT\" });\n      case 39:\n        return this.setState({ direction: \"RIGHT\" });\n      default:\n        break;\n    }\n  };\n\n  moveSnake = () => {\n    let dots = [...this.state.snakeDots];\n    let head = dots[dots.length - 1];\n\n    switch (this.state.direction) {\n      case \"DOWN\":\n        head = [head[0] + 2, head[1]];\n        break;\n      case \"UP\":\n        head = [head[0] - 2, head[1]];\n        break;\n      case \"RIGHT\":\n        head = [head[0], head[1] + 2];\n        break;\n      case \"LEFT\":\n        head = [head[0], head[1] - 2];\n        break;\n      default:\n        break;\n    }\n    dots.push(head);\n    dots.shift();\n    this.setState({ snakeDots: dots });\n  };\n\n  checkBoprders() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    if (head[0] >= 100 || head[1] >= 100 || head[0] < 0 || head[1] < 0) {\n      this.gameOver();\n    }\n  }\n\n  checkCollapsed() {\n    let snake = [...this.state.snakeDots];\n    let head = snake[snake.length - 1];\n\n    snake.pop();\n    snake.forEach(dot => {\n      if (head[0] === dot[0] && head[1] === dot[1]) {\n        this.gameOver();\n      }\n    });\n  }\n\n  checkFood() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    let food = this.state.food;\n    if (head[1] === food[0] && head[0] === food[1]) {\n      this.setState({\n        food: getRandomCoord()\n      });\n      this.enlargeSnake();\n      this.speedIn();\n      console.log(\"РАСТИ\");\n    }\n  }\n\n  speedIn() {\n    if (this.state.speed > 10) {\n      this.setState({ speed: this.state.speed - 10 });\n    }\n  }\n\n  enlargeSnake() {\n    let newSnake = [...this.state.snakeDots];\n    newSnake.unshift([]);\n    this.setState({ snakeDots: newSnake });\n  }\n\n  gameOver() {\n    alert(\"Игра окончена, змея вышла за пределы игровой зоны\");\n    this.setState(initialState);\n  }\n\n  render() {\n    return (\n      <div className=\"game-area\">\n        <Snake snakeDots={this.state.snakeDots} />\n        <Food dot={this.state.food} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}