{"version":3,"sources":["components/appHeader/index.js","components/searchPanel/index.js","components/postListItem/index.js","components/postList/index.js","components/postAddForm/index.js","components/postStatusFilter/index.js","components/app/index.js","index.js"],"names":["AppHeader","liked","allPosts","className","SearchPanel","state","term","onUpdateSearch","e","target","value","toLowerCase","setState","props","type","placeholder","onChange","this","React","Component","PostListItem","label","onDelete","onImportant","onLike","classNames","important","like","onClick","PostList","posts","items","map","item","id","itemProps","key","PostAddForm","text","textError","checkEmptyStr","onValueChange","onSubmit","preventDefault","console","log","onAdd","PostStatusFilter","buttons","name","filter","onFilterSelect","clazz","App","data","idMax","onDeleteItem","index","findIndex","elem","before","slice","after","onAddItem","body","newItem","Math","random","onImportantLikeHandler","old","length","indexOf","visiblePosts","filterPosts","searchPost","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b9f7e16f.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./index.css\";\n\nconst AppHeader = ({ liked, allPosts }) => {\n  return (\n    <div className=\"app-header d-flex\">\n      <h1>Mini Twitter</h1>\n      <h2>\n        <strong>{allPosts}</strong> Записи, из них понравилось &nbsp;\n        <strong>{liked}</strong>\n      </h2>\n    </div>\n  );\n};\n\nexport default AppHeader;\n","import React from \"react\";\n\nimport \"./index.css\";\n\nexport default class SearchPanel extends React.Component {\n  state = {\n    term: \"\",\n  };\n\n  onUpdateSearch = (e) => {\n    const term = e.target.value.toLowerCase();\n    this.setState({ term });\n    this.props.onUpdateSearch(term);\n  };\n\n  render() {\n    return (\n      <input\n        className=\"form-control search-input\"\n        type=\"text\"\n        placeholder=\"Поиск по записям\"\n        onChange={this.onUpdateSearch}\n      />\n    );\n  }\n}\n","import React from \"react\";\n\nimport \"./index.css\";\n\nexport default class PostListItem extends React.Component {\n  render() {\n    const {\n      label,\n      onDelete,\n      onImportant,\n      onLike,\n      important,\n      like,\n    } = this.props;\n\n    let classNames = \"app-list-item d-flex justify-content-between\";\n\n    if (important) {\n      classNames += \" important\";\n    }\n    if (like) {\n      classNames += \" like\";\n    }\n\n    return (\n      <div className={classNames}>\n        <span className=\"app-list-item-label\" onClick={onLike}>\n          {label}\n        </span>\n        <div className=\"d-flex justify-content-center align-items-center\">\n          <button\n            className=\"btn-star btn-sm\"\n            type=\"button\"\n            onClick={onImportant}\n          >\n            <i className=\"fa fa-star\"></i>\n          </button>\n          <button className=\"btn-trash btn-sm\" type=\"button\" onClick={onDelete}>\n            <i className=\"fa fa-trash-o\"></i>\n          </button>\n          <i className=\"fa fa-heart\"></i>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PostListItem from \"../postListItem\";\n\nimport \"./index.css\";\n\nconst PostList = ({ posts, onDelete, onImportant, onLike }) => {\n  const items = posts.map((item) => {\n    const { id, ...itemProps } = item;\n    return (\n      <li className=\"list-group-item\" key={id}>\n        <PostListItem\n          {...itemProps}\n          onDelete={() => onDelete(id)}\n          onImportant={() => onImportant(id)}\n          onLike={() => onLike(id)}\n        />\n      </li>\n    );\n  });\n\n  return <ul className=\"app-list list-group\">{items}</ul>;\n};\n\nexport default PostList;\n","import React from \"react\";\n\nimport \"./index.css\";\n\nexport default class PostAddForm extends React.Component {\n  state = {\n    text: \"\",\n    textError: \"\",\n  };\n\n  checkEmptyStr = (value) => {\n    if (value) {\n      this.setState({\n        textError: \"Поле не должно быть пустым\",\n      });\n    } else {\n      this.setState({\n        textError: \"\",\n      });\n      return true;\n    }\n  };\n\n  onValueChange = (e) => {\n    this.setState({\n      text: e.target.value,\n    });\n    this.checkEmptyStr(e.target.value === \"\");\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    console.log(this.state.text);\n    if (this.checkEmptyStr(this.state.text === \"\")) {\n      this.props.onAdd(this.state.text);\n    }\n    this.setState({\n      text: \"\",\n    });\n  };\n\n  render() {\n    const { text, textError } = this.state;\n    return (\n      <form className=\"bottom-panel d-flex\" onSubmit={this.onSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Напиши свои мысли\"\n          className=\"form-control new-post-label\"\n          onChange={this.onValueChange}\n          value={text}\n        />\n        <span className=\"error\">{textError}</span>\n        <button type=\"submit\" className=\"btn btn-outline-secondary\">\n          Добавить\n        </button>\n      </form>\n    );\n  }\n}\n","import React from \"react\";\n\nimport \"./index.css\";\n\nexport default class PostStatusFilter extends React.Component {\n  buttons = [\n    { name: \"all\", label: \"Все\" },\n    { name: \"like\", label: \"Посты с лайком\" },\n  ];\n  render() {\n    const { filter, onFilterSelect } = this.props;\n\n    const buttons = this.buttons.map(({ name, label }) => {\n      const active = filter === name;\n      const clazz = active ? \"btn-info\" : \"btn-outline-secondary\";\n      return (\n        <button\n          key={name}\n          type=\"button\"\n          className={`btn ${clazz}`}\n          onClick={() => onFilterSelect(name)}\n        >\n          {label}\n        </button>\n      );\n    });\n    return <div className=\"btn-group\">{buttons}</div>;\n  }\n}\n","import React from \"react\";\n\nimport AppHeader from \"../appHeader\";\nimport SearchPanel from \"../searchPanel\";\nimport PostList from \"../postList\";\nimport PostAddForm from \"../postAddForm\";\nimport PostStatusFilter from \"../postStatusFilter\";\n\nimport \"./index.css\";\n\nexport default class App extends React.Component {\n  state = {\n    data: [\n      { label: \"Пост номер 1\", important: false, like: false, id: 1 },\n      { label: \"Пост номер 2\", important: false, like: false, id: 2 },\n      { label: \"Пост номер 3\", important: false, like: false, id: 3 },\n    ],\n    idMax: 4,\n    term: \"\",\n    filter: \"all\",\n  };\n\n  searchPost(items, term) {\n    if (term.length === 0) {\n      return items;\n    }\n    return items.filter((item) => {\n      return item.label.toLowerCase().indexOf(term) > -1;\n    });\n  }\n\n  onUpdateSearch = (term) => {\n    this.setState({ term });\n  };\n\n  filterPosts(items, filter) {\n    if (filter === \"like\") {\n      return items.filter((item) => item.like);\n    }\n    return items;\n  }\n\n  onFilterSelect = (filter) => {\n    this.setState({\n      filter,\n    });\n  };\n\n  onDeleteItem = (id) => {\n    this.setState(({ data }) => {\n      const index = data.findIndex((elem) => elem.id === id);\n      const before = data.slice(0, index);\n      const after = data.slice(index + 1);\n      const newArr = [...before, ...after];\n      return { data: newArr };\n    });\n  };\n\n  onAddItem = (body) => {\n    const newItem = {\n      label: body,\n      important: false,\n      id: this.state.idMax + Math.random(),\n    };\n\n    this.setState(({ data }) => {\n      const newArr = [...data, newItem];\n      return {\n        data: newArr,\n      };\n    });\n  };\n\n  onImportantLikeHandler = (id, key) => {\n    this.setState(({ data }) => {\n      const index = data.findIndex((elem) => elem.id === id);\n\n      const old = data[index];\n      const newItem = { ...old, [key]: !old[key] };\n\n      const newArr = [\n        ...data.slice(0, index),\n        newItem,\n        ...data.slice(index + 1),\n      ];\n      return {\n        data: newArr,\n      };\n    });\n  };\n\n  onImportant = (id) => this.onImportantLikeHandler(id, \"important\");\n  onLike = (id) => this.onImportantLikeHandler(id, \"like\");\n\n  render() {\n    const { data, term, filter } = this.state;\n    const liked = data.filter((item) => item.like).length;\n    const allPosts = data.length;\n    const visiblePosts = this.filterPosts(this.searchPost(data, term), filter);\n    return (\n      <div className=\"app\">\n        <AppHeader liked={liked} allPosts={allPosts} />\n        <div className=\"search-panel d-flex\">\n          <SearchPanel onUpdateSearch={this.onUpdateSearch} />\n          <PostStatusFilter\n            filter={filter}\n            onFilterSelect={this.onFilterSelect}\n          />\n        </div>\n\n        <PostList\n          posts={visiblePosts}\n          onDelete={this.onDeleteItem}\n          onImportant={this.onImportant}\n          onLike={this.onLike}\n        />\n\n        <PostAddForm onAdd={this.onAddItem} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/app\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}