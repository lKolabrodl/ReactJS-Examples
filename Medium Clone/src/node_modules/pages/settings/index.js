import React, { useContext, useState, useEffect } from 'react';
import useFetch from 'hooks/useFetch'
import {CurrentUserContext} from 'contexts/currentUser'
import BackendErrorMessages from 'components/backendErrorMessages'

import useLocalStorage from 'hooks/useLocalStorage';
import { Redirect } from 'react-router-dom';


const Settings = ()=>{
  const [CurrentUserState, dispatch] = useContext(CurrentUserContext)
  const apiURL = '/user'
  const [{response, error}, doFetch] = useFetch(apiURL)

  const [image, setImage] = useState('')
  const [username, setUsername] = useState('')
  const [bio, setBio] = useState('')
  const [email, setEmail] = useState('')
  const [password, setPassword] = useState('')
  const [, setToken] = useLocalStorage('token')
  const [isSuccessfullLogout, setIsSuccessfullLogout] = useState(false);

  const handleSubmit = (e)=>{
    e.preventDefault();
    doFetch({
      method: 'put',
      data:{
        user:{
            ...CurrentUserState.currentUser,
            image,
            username,
            bio,
            email,
            password
        }
      }
    })
  }

  const logout = (e)=>{
    e.preventDefault();
    setToken('');
    dispatch({type:'LOGOUT'});  
    setIsSuccessfullLogout(true);
  }

  useEffect( ()=>{
    if(!CurrentUserState.currentUser){
      return
    }
    setImage(CurrentUserState.currentUser.image)
    setUsername(CurrentUserState.currentUser.username)
    setBio(CurrentUserState.currentUser.bio)
    setEmail(CurrentUserState.currentUser.email)
  },[CurrentUserState.currentUser])

  useEffect( ()=>{
    if(!response){
      return
    }
    dispatch({type: 'SET_AUTHORIZED', payload:response.user})
  },[response, dispatch])

  if(isSuccessfullLogout){
    return <Redirect to='/' />
  }

  
  return (
    <div className="settings-page">
      <div className="container page">
        <div className="row">
          <div className="col-md-6 offset-md-3 col-xs-12">
            <h1 className="text-xs-center">Ваши настройки</h1>
            {error &&  <BackendErrorMessages backendErrors={error.errors} />}
            <form onSubmit={handleSubmit}>
            <fieldset>
              <fieldset className="form-group">
                <input type='text' 
                className="form-control form-control-lg" 
                placeholder='url картинки' 
                value={image}
                onChange={e=>setImage(e.target.value)}
                />
              </fieldset>
              <fieldset className="form-group">
                <input type='text'
                 className="form-control form-control-lg"
                placeholder='username'
                value={username}
                onChange={e=>setUsername(e.target.value)}
                 />
              </fieldset>
              <fieldset className="form-group">
                <textarea className="form-control form-control-lg" 
                rows='8' 
                placeholder='bio'
                value={bio}
                onChange={e=>setBio(e.target.value)}
                /> 
              </fieldset>
              <fieldset className="form-group">
                <input type='email' 
                className="form-control form-control-lg" 
                placeholder='email'
                value={email}
                onChange={e=>setEmail(e.target.value)} 
                />
              </fieldset>
              <fieldset className="form-group">
                <input type='password' 
                className="form-control form-control-lg" 
                placeholder='password' 
                value={password}
                onChange={e=>setPassword(e.target.value)} 
                />
              </fieldset>
              <fieldset className="form-group">
                <button value='submit' className='btn btn-lg btn-primary pull-xs-right'>
                  Обновить настройки
                </button>
              </fieldset>
            </fieldset>
          </form>
          <hr/>
          <button value='submit' className='btn btn-outline-danger'
          onClick={logout}>
                  Выйти
          </button>
          </div>
        
        </div>
      </div>
    </div>
  )
}
export default Settings;