{"version":3,"sources":["components/servise/servise.jsx","components/Spinner/Spinner.jsx","components/StoryItem/StoryItem.jsx","components/utils/mapTime.js","components/StoryList/StoryList.jsx","components/Pagination/Pagination.jsx","App.jsx","index.js"],"names":["baseUrl","newStoriesUrl","storyUrl","getStoryIds","a","axios","get","result","data","getStory","storyId","Spinner","className","StoryItem","id","useState","story","setStory","useEffect","then","title","timestamp","seconds","Math","floor","Date","interval","mapTime","time","target","href","url","by","StoryList","length","map","item","key","Pagination","postPerPage","totalPost","selectNumber","pageNumbers","i","ceil","push","onClick","App","setId","currenPage","setCurrenPage","indexLastPost","indexFirstPost","currenPosts","slice","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.122d9814.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst baseUrl = \"https://hacker-news.firebaseio.com/v0/\";\r\nconst newStoriesUrl = `${baseUrl}newstories.json`;\r\nconst storyUrl = `${baseUrl}item/`;\r\n\r\nexport const getStoryIds = async () => {\r\n  const result = await axios.get(newStoriesUrl);\r\n  return result.data;\r\n};\r\n\r\nexport const getStory = async (storyId) => {\r\n  const result = await axios.get(`${storyUrl + storyId}.json`);\r\n  return result.data;\r\n};\r\n","import React from \"react\";\r\nimport \"./Spinner.css\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"lds-css ng-scope\">\r\n      <div className=\"lds-eclipse\">\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { getStory } from \"../servise/servise\";\r\nimport { mapTime } from \"../utils/mapTime\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\n\r\nconst StoryItem = ({ id }) => {\r\n  const [story, setStory] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (!id) {\r\n      return;\r\n    }\r\n    getStory(id).then((data) => setStory(data));\r\n  }, [id]);\r\n\r\n  return (\r\n    <>\r\n      {id ? (\r\n        <div className=\"col-12\">\r\n          <div className=\"blog-post\">\r\n            <h2 className=\"blog-post-title\">{story.title}</h2>\r\n            <p className=\"blog-post-meta\">\r\n              опубликовано {mapTime(story.time)} назад\r\n              <br />\r\n              <a target=\"_blank\" href={story.url}>\r\n                {story.by}\r\n              </a>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <Spinner />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StoryItem;\r\n","export const mapTime = (timestamp) => {\r\n  const seconds = Math.floor((new Date() - timestamp * 1000) / 1000);\r\n\r\n  let interval = Math.floor(seconds / 31536000);\r\n\r\n  if (interval > 1) {\r\n    return `${interval} лет`;\r\n  }\r\n  interval = Math.floor(seconds / 2592000);\r\n\r\n  if (interval > 1) {\r\n    return `${interval} месяца`;\r\n  }\r\n  interval = Math.floor(seconds / 86400);\r\n\r\n  if (interval > 1) {\r\n    return `${interval} дней`;\r\n  }\r\n  interval = Math.floor(seconds / 3600);\r\n\r\n  if (interval > 1) {\r\n    return `${interval} часа`;\r\n  }\r\n  interval = Math.floor(seconds / 60);\r\n\r\n  if (interval > 1) {\r\n    return `${interval} минут`;\r\n  }\r\n\r\n  return `${Math.floor(seconds)} seconds`;\r\n};\r\n","import React from \"react\";\r\nimport StoryItem from \"../StoryItem/StoryItem\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\n\r\nconst StoryList = ({ id }) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        {id.length === 0 ? (\r\n          <Spinner />\r\n        ) : (\r\n          <>\r\n            {id.map((item) => (\r\n              <StoryItem key={item} id={item} />\r\n            ))}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StoryList;\r\n","import React from \"react\";\r\n\r\nconst Pagination = ({ postPerPage, totalPost, selectNumber }) => {\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= Math.ceil(totalPost / postPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pageNumbers.map((item, i) => (\r\n          <li key={i} className=\"page-item\">\r\n            <a\r\n              onClick={() => selectNumber(item)}\r\n              href={`#${i}`}\r\n              className=\"page-link\"\r\n            >\r\n              {item}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useState, useEffect } from \"react\";\nimport StoryList from \"./components/StoryList/StoryList\";\nimport { getStoryIds } from \"./components/servise/servise\";\nimport Pagination from \"./components/Pagination/Pagination\";\n\nimport \"./index.css\";\n\nconst App = () => {\n  const [id, setId] = useState([]);\n\n  const [currenPage, setCurrenPage] = useState(1);\n  const [postPerPage, setPostPerPage] = useState(20);\n\n  const indexLastPost = currenPage * postPerPage;\n  const indexFirstPost = indexLastPost - postPerPage;\n  const currenPosts = id.slice(indexFirstPost, indexLastPost);\n\n  const selectNumber = (item) => {\n    setCurrenPage(item);\n  };\n\n  useEffect(() => {\n    if (id.length !== 0) {\n      return;\n    }\n    getStoryIds().then((data) => setId(data));\n  }, [id]);\n\n  return (\n    <>\n      <StoryList id={currenPosts} />\n      <Pagination\n        postPerPage={postPerPage}\n        totalPost={id.length}\n        selectNumber={selectNumber}\n      />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.jsx\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}