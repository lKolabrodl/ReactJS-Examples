{"version":3,"sources":["components/AddForm.tsx","components/TodoListItem.tsx","components/TodoList.tsx","App.tsx","index.tsx","components/TodoListItem.module.scss"],"names":["AddForm","addTodo","useState","newTodo","setNewTodo","onSubmit","e","preventDefault","type","value","onChange","target","TodoListItem","todo","toggleTodo","className","complete","styles","undefined","checked","text","TodoList","todos","map","key","initialState","App","setTodos","selectedTodo","newtodos","trim","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"0LA2BeA,EArByB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACzBC,mBAAS,IADgB,mBAChDC,EADgD,KACvCC,EADuC,KAavD,OACE,0BAAMC,SAPa,SAACC,GACpBA,EAAEC,iBACFN,EAAQE,GACRC,EAAW,MAKT,2BAAOI,KAAK,OAAOC,MAAON,EAASO,SAZlB,SAACJ,GACpBF,EAAWE,EAAEK,OAAOF,UAYlB,4BAAQD,KAAK,UAAb,e,gBCCSI,EAfmC,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WACzD,OACE,4BACE,2BAAOC,UAAWF,EAAKG,SAAWC,IAAOD,cAAWE,GAClD,2BACEV,KAAK,WACLW,QAASN,EAAKG,SACdN,SAAU,kBAAMI,EAAWD,MAE5BA,EAAKO,QCDCC,EAV2B,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOR,EAAiB,EAAjBA,WAClD,OACE,4BACGQ,EAAMC,KAAI,SAACV,GAAD,OACT,kBAAC,EAAD,CAAcW,IAAKX,EAAKO,KAAMP,KAAMA,EAAMC,WAAYA,SCNxDW,EAA4B,CAChC,CAAEL,KAAM,OAAQJ,UAAU,GAC1B,CAAEI,KAAM,OAAQJ,UAAU,IAgCbU,EA7BO,WAAO,IAAD,EACAxB,mBAASuB,GADT,mBACnBH,EADmB,KACZK,EADY,KAqB1B,OACE,oCACE,kBAAC,EAAD,CAAUL,MAAOA,EAAOR,WApBG,SAACc,GAC9B,IAAMC,EAAWP,EAAMC,KAAI,SAACV,GAC1B,OAAIA,IAASe,EACJ,eACFf,EADL,CAEEG,UAAWH,EAAKG,WAGbH,KAETc,EAASE,MAWP,kBAAC,EAAD,CAAS5B,QARY,SAACE,GACL,KAAnBA,EAAQ2B,QACNH,EAAS,GAAD,mBAAKL,GAAL,CAAY,CAAEF,KAAMjB,EAASa,UAAU,WCtBrDe,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,SAAW,iC","file":"static/js/main.31de9f9c.chunk.js","sourcesContent":["import React, { ChangeEvent, FormEvent, useState } from \"react\";\r\n\r\ninterface AddFormProps {\r\n  addTodo: AddToDo;\r\n}\r\n\r\nconst AddForm: React.FC<AddFormProps> = ({ addTodo }) => {\r\n  const [newTodo, setNewTodo] = useState(\"\");\r\n\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setNewTodo(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    addTodo(newTodo);\r\n    setNewTodo(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={newTodo} onChange={handleChange} />\r\n      <button type=\"submit\"> Add ToDo</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddForm;\r\n","import React from \"react\";\r\nimport styles from \"./TodoListItem.module.scss\";\r\n\r\ninterface TodoLostItemProps {\r\n  todo: Todo;\r\n  toggleTodo: ToggleToDo;\r\n}\r\n\r\nconst TodoListItem: React.FC<TodoLostItemProps> = ({ todo, toggleTodo }) => {\r\n  return (\r\n    <li>\r\n      <label className={todo.complete ? styles.complete : undefined}>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={todo.complete}\r\n          onChange={() => toggleTodo(todo)}\r\n        />\r\n        {todo.text}\r\n      </label>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default TodoListItem;\r\n","import React from \"react\";\r\nimport TodoListItem from \"./TodoListItem\";\r\ninterface TodoListProps {\r\n  todos: Array<Todo>;\r\n  toggleTodo: ToggleToDo;\r\n}\r\nconst TodoList: React.FC<TodoListProps> = ({ todos, toggleTodo }) => {\r\n  return (\r\n    <ul>\r\n      {todos.map((todo) => (\r\n        <TodoListItem key={todo.text} todo={todo} toggleTodo={toggleTodo} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useState } from \"react\";\nimport AddForm from \"./components/AddForm\";\nimport TodoList from \"./components/TodoList\";\n\nconst initialState: Array<Todo> = [\n  { text: \"popa\", complete: false },\n  { text: \"pipa\", complete: true },\n];\n\nconst App: React.FC = () => {\n  const [todos, setTodos] = useState(initialState);\n\n  const toggleTodo: ToggleToDo = (selectedTodo) => {\n    const newtodos = todos.map((todo: any) => {\n      if (todo === selectedTodo) {\n        return {\n          ...todo,\n          complete: !todo.complete,\n        };\n      }\n      return todo;\n    });\n    setTodos(newtodos);\n  };\n\n  const addTodo: AddToDo = (newTodo) => {\n    newTodo.trim() !== \"\" &&\n      setTodos([...todos, { text: newTodo, complete: false }]);\n  };\n\n  return (\n    <>\n      <TodoList todos={todos} toggleTodo={toggleTodo} />\n      <AddForm addTodo={addTodo} />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"complete\":\"TodoListItem_complete__3ROSg\"};"],"sourceRoot":""}